# ------------------------------------
#   欢迎您使用阿里云函数计算 FC 组件进行项目开发
#   组件仓库地址/帮助文档：https://github.com/devsapp/fc
#   Yaml参考文档：https://github.com/devsapp/fc/blob/jiangyu-docs/docs/zh/yaml.md
#   快速入门：
#      快速创建应用：https://github.com/devsapp/fc/blob/jiangyu-docs/docs/zh/quick_start_application.md
#      快速使用命令：https://github.com/devsapp/fc/blob/jiangyu-docs/docs/zh/quick_start_function.md
# ------------------------------------

edition: 1.0.0
name: hello-world-app
access: "{{ access }}"

vars: # 全局变量
  region: cn-beijing
  service:
    name: fc-liboffice
    description: 'make a word change to pdf'
    internetAccess: true

services:
  framework: # 业务名称/模块名称
    component:  fc
    actions:
      pre-deploy:
        - run: s build --use-docker --dockerfile ./code/Dockerfile
          path: ./
#      post-deploy: # 在deploy之前运行
#        - run: s nas upload ./db.sqlite3 /mnt/auto  # 要运行的命令行
#          path: ./ # 命令行运行的路径
    props: # 组件的属性值
      region: ${vars.region}
      service: ${vars.service}
      function:
        name: word2pdf
        runtime: custom-container
        codeUri: ./code
        memorySize: 3072
        timeout: 900
        caPort: 9000
        customContainerConfig:
          image: registry-vpc.cn-hangzhou.aliyuncs.com/fc-demo/fc-liboffice:v0.4
        environmentVariables:
          TZ: Asia/Shanghai
          OSS_BUCKET: <your bucket>
          OSS_AK_ID: <your ak id>
          OSS_AK_SECRET: <your ak secret>

#  next-function: # 第二个函数的案例，仅供参考
#    # 如果在当前项目下执行 s deploy，会同时部署模块：
#    #   framework：服务fc-liboffice，函数word2pdf
#    #   next-function：服务fc-liboffice，函数next-function-example
#    # 如果想单独部署当前服务与函数，可以执行 s + 模块名/业务名 + deploy，例如：s next-function deploy
#    # 如果想单独部署当前函数，可以执行 s + 模块名/业务名 + deploy function，例如：s next-function deploy function
#    # 更多命令可参考：https://github.com/devsapp/fc/tree/jiangyu-docs/docs#文档相关
#    component: fc
#    props:
#      region: ${vars.region}
#      service: ${vars.service} # 应用整体的服务配置
#      function: # 定义一个新的函数
#        name: next-function-example
#        description: 'hello world by serverless devs'