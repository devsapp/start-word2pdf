# ------------------------------------
#   欢迎您使用阿里云函数计算 FC 组件进行项目开发
#   组件仓库地址/帮助文档：https://github.com/devsapp/fc
#   Yaml参考文档：https://github.com/devsapp/fc/blob/jiangyu-docs/docs/zh/yaml.md
#   关于：
#      - Serverless Devs和FC组件的关系、如何声明/部署多个函数、超过50M的代码包如何部署
#      - 关于.fcignore使用方法、工具中.s目录是做什么、函数进行build操作之后如何处理build的产物
#   等问题，可以参考文档：https://github.com/devsapp/fc/blob/jiangyu-docs/docs/zh/tips.md
#   关于如何做CICD等问题，可以参考：https://github.com/Serverless-Devs/Serverless-Devs/blob/master/docs/zh/cicd.md
#   有问题快来钉钉群问一下吧：33947367
# ------------------------------------
edition: 1.0.0
name: word2pdf
access: "{{ access }}"

vars: # 全局变量
  region: "{{ region }}"
  service:
    name: "{{ serviceName }}"
    description: 'make a word change to pdf'
    internetAccess: true

services:
  framework: # 业务名称/模块名称
    component:  fc
    actions:
      pre-deploy:
        - component: fc build --use-docker --dockerfile ./code/Dockerfile
    props: # 组件的属性值
      region: ${vars.region}
      service: ${vars.service}
      function:
        name: "{{ functionName }}"
        runtime: custom-container
        codeUri: ./code
        memorySize: 1536
        timeout: 900
        caPort: 9000
        customContainerConfig:
          image:  "{{ acrRegistry }}"
        environmentVariables:
          TZ: "{{ timeZone }}"
          OSS_BUCKET: "{{ ossBucket }}"
          OSS_AK_ID: "{{ ossAKID }}"
          OSS_AK_SECRET: "{{ ossAKSecret }}"

#  next-function: # 第二个函数的案例，仅供参考
#    # 如果在当前项目下执行 s deploy，会同时部署模块：
#    #   framework：服务fc-liboffice，函数word2pdf
#    #   next-function：服务fc-liboffice，函数next-function-example
#    # 如果想单独部署当前服务与函数，可以执行 s + 模块名/业务名 + deploy，例如：s next-function deploy
#    # 如果想单独部署当前函数，可以执行 s + 模块名/业务名 + deploy function，例如：s next-function deploy function
#    # 更多命令可参考：https://github.com/devsapp/fc/tree/jiangyu-docs/docs#文档相关
#    component: fc
#    props:
#      region: ${vars.region}
#      service: ${vars.service} # 应用整体的服务配置
#      function: # 定义一个新的函数
#        name: next-function-example
#        description: 'hello world by serverless devs'